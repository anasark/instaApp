type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    posts: [Post!]! @all
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime
    updated_at: DateTime
}

type Comment {
    id: ID!
    user_id: ID!
    post_id: ID!
    content: String!
    created_at: String
    updated_at: String
    user: User @hasOne
}

type Like {
    id: ID!
    user_id: ID!
    post_id: ID!
    created_at: String
    updated_at: String
}

type Post {
    id: ID!
    user_id: ID!
    caption: String!
    image: String!
    created_at: String
    updated_at: String
    user: User @hasOne
    comments: [Comment] @hasMany
    likes: [Like] @hasMany
    commentCount: Int @count(model: "App\\Models\\Comment")
    likeCount: Int @count(model: "App\\Models\\Like")
}
